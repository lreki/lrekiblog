"use strict";(self.webpackChunkblog_demo=self.webpackChunkblog_demo||[]).push([[143],{6396:(e,a,t)=>{t.d(a,{g:()=>p});var l=t(7478),n=t(5748),i=t(1598),o=t(6665),s=t(1843),r=t(8580),d=t(9146),h=t(881),c=t(1301);const m=(0,t(7621).vW)((({app:e,router:a,siteData:t})=>{})),p=[l.Z,n.Z,i.Z,o.Z,s.Z,r.Z,d.Z,h.Z,c.Z,m]},9947:(e,a,t)=>{t.d(a,{p:()=>o});var l=t(3051),n=t(8805),i=t(9796);const o=[l.Z,n.Z,i.Z]},4611:(e,a,t)=>{t.d(a,{l:()=>o});var l=t(1263),n=t(6243),i=t(7593);const o=[l.Z,n.Z,i.Z]},4150:(e,a,t)=>{t.d(a,{Z:()=>n});var l=t(6252);const n={404:(0,l.RC)((()=>Promise.all([t.e(973),t.e(431)]).then(t.bind(t,2431)))),Layout:(0,l.RC)((()=>t.e(887).then(t.bind(t,8887))))}},6056:(e,a,t)=>{t.d(a,{b:()=>n});var l=t(6252);const n={"v-53329e14":(0,l.RC)((()=>t.e(259).then(t.bind(t,3906)))),"v-53084daf":(0,l.RC)((()=>t.e(235).then(t.bind(t,7675)))),"v-7b8006fc":(0,l.RC)((()=>t.e(16).then(t.bind(t,4085)))),"v-27124a64":(0,l.RC)((()=>t.e(72).then(t.bind(t,6010)))),"v-d7c5ecf2":(0,l.RC)((()=>t.e(464).then(t.bind(t,3672)))),"v-1cb8f391":(0,l.RC)((()=>t.e(470).then(t.bind(t,2443)))),"v-3706649a":(0,l.RC)((()=>t.e(88).then(t.bind(t,8109)))),"v-8daa1a0e":(0,l.RC)((()=>t.e(509).then(t.bind(t,1829)))),"v-74bc627b":(0,l.RC)((()=>t.e(5).then(t.bind(t,9085)))),"v-14f724bf":(0,l.RC)((()=>t.e(69).then(t.bind(t,8784)))),"v-14e6501c":(0,l.RC)((()=>t.e(713).then(t.bind(t,779)))),"v-744d024e":(0,l.RC)((()=>t.e(146).then(t.bind(t,7034)))),"v-705c21a6":(0,l.RC)((()=>t.e(888).then(t.bind(t,8099)))),"v-6629f178":(0,l.RC)((()=>t.e(158).then(t.bind(t,7984)))),"v-031dfb13":(0,l.RC)((()=>t.e(722).then(t.bind(t,7659)))),"v-e2acc714":(0,l.RC)((()=>t.e(356).then(t.bind(t,5506)))),"v-4382d077":(0,l.RC)((()=>t.e(740).then(t.bind(t,7072)))),"v-3279cf61":(0,l.RC)((()=>t.e(118).then(t.bind(t,1973)))),"v-3c506944":(0,l.RC)((()=>t.e(219).then(t.bind(t,5455))))}},9706:(e,a,t)=>{t.d(a,{T:()=>l});const l={"v-53329e14":()=>t.e(259).then(t.bind(t,5812)).then((({data:e})=>e)),"v-53084daf":()=>t.e(235).then(t.bind(t,6553)).then((({data:e})=>e)),"v-7b8006fc":()=>t.e(16).then(t.bind(t,9366)).then((({data:e})=>e)),"v-27124a64":()=>t.e(72).then(t.bind(t,9966)).then((({data:e})=>e)),"v-d7c5ecf2":()=>t.e(464).then(t.bind(t,7540)).then((({data:e})=>e)),"v-1cb8f391":()=>t.e(470).then(t.bind(t,4915)).then((({data:e})=>e)),"v-3706649a":()=>t.e(88).then(t.bind(t,1801)).then((({data:e})=>e)),"v-8daa1a0e":()=>t.e(509).then(t.bind(t,6464)).then((({data:e})=>e)),"v-74bc627b":()=>t.e(5).then(t.bind(t,2988)).then((({data:e})=>e)),"v-14f724bf":()=>t.e(69).then(t.bind(t,4770)).then((({data:e})=>e)),"v-14e6501c":()=>t.e(713).then(t.bind(t,4502)).then((({data:e})=>e)),"v-744d024e":()=>t.e(146).then(t.bind(t,6041)).then((({data:e})=>e)),"v-705c21a6":()=>t.e(888).then(t.bind(t,6762)).then((({data:e})=>e)),"v-6629f178":()=>t.e(158).then(t.bind(t,4141)).then((({data:e})=>e)),"v-031dfb13":()=>t.e(722).then(t.bind(t,8332)).then((({data:e})=>e)),"v-e2acc714":()=>t.e(356).then(t.bind(t,6790)).then((({data:e})=>e)),"v-4382d077":()=>t.e(740).then(t.bind(t,7629)).then((({data:e})=>e)),"v-3279cf61":()=>t.e(118).then(t.bind(t,8588)).then((({data:e})=>e)),"v-3c506944":()=>t.e(219).then(t.bind(t,3350)).then((({data:e})=>e))}},4634:(e,a,t)=>{t.d(a,{g:()=>n});var l=t(4802);const n=[["v-53329e14","/JavaSE/BigDecimal()%E6%96%B9%E6%B3%95%E6%B3%A8%E6%84%8F%E7%82%B9.html",{},["/JavaSE/BigDecimal()方法注意点.html","/JavaSE/BigDecimal()%E6%96%B9%E6%B3%95%E6%B3%A8%E6%84%8F%E7%82%B9","/JavaSE/BigDecimal()方法注意点.md","/JavaSE/BigDecimal()%E6%96%B9%E6%B3%95%E6%B3%A8%E6%84%8F%E7%82%B9.md"]],["v-53084daf","/JavaSE/Java%20Reflection.html",{},["/JavaSE/Java Reflection.html","/JavaSE/Java%20Reflection","/JavaSE/Java Reflection.md","/JavaSE/Java%20Reflection.md"]],["v-7b8006fc","/JavaSE/Protected%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90.html",{},["/JavaSE/Protected访问权限.html","/JavaSE/Protected%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90","/JavaSE/Protected访问权限.md","/JavaSE/Protected%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90.md"]],["v-27124a64","/JavaSE/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",{},["/JavaSE/单例模式.html","/JavaSE/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F","/JavaSE/单例模式.md","/JavaSE/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.md"]],["v-d7c5ecf2","/MySQL/InnoDB%E6%9E%B6%E6%9E%84.html",{},["/MySQL/InnoDB架构.html","/MySQL/InnoDB%E6%9E%B6%E6%9E%84","/MySQL/InnoDB架构.md","/MySQL/InnoDB%E6%9E%B6%E6%9E%84.md"]],["v-1cb8f391","/MySQL/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.html",{},["/MySQL/逻辑存储结构.html","/MySQL/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84","/MySQL/逻辑存储结构.md","/MySQL/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.md"]],["v-3706649a","/404.html",{},["/404"]],["v-8daa1a0e","/",{},["/index.html"]],["v-74bc627b","/about/",{},["/about/index.html"]],["v-14f724bf","/mood/",{},["/mood/index.html"]],["v-14e6501c","/link/",{},["/link/index.html"]],["v-744d024e","/tag/",{},["/tag/index.html"]],["v-705c21a6","/archive/",{},["/archive/index.html"]],["v-6629f178","/aurora-coze/",{},["/aurora-coze/index.html"]],["v-031dfb13","/register/",{},["/register/index.html"]],["v-e2acc714","/photo/",{},["/photo/index.html"]],["v-4382d077","/next-mood/",{},["/next-mood/index.html"]],["v-3279cf61","/aurora-archive/",{},["/aurora-archive/index.html"]],["v-3c506944","/aurora-music/",{},["/aurora-music/index.html"]]].reduce(((e,[a,t,n,i])=>(e.push({name:a,path:t,component:l.Y,meta:n},...i.map((e=>({path:e,redirect:t})))),e)),[{name:"404",path:"/:catchAll(.*)",component:l.Y}])},5472:(e,a,t)=>{t.d(a,{D:()=>l});const l=[{title:"BigDecimal()方法注意点",headers:[{level:2,title:"关于BigDecimal()方法",slug:"关于bigdecimal-方法",children:[]}],path:"/JavaSE/BigDecimal()%E6%96%B9%E6%B3%95%E6%B3%A8%E6%84%8F%E7%82%B9.html",pathLocale:"/",extraFields:[]},{title:"Java Reflection",headers:[{level:2,title:"Java的反射「Reflection」",slug:"java的反射「reflection」",children:[{level:3,title:"概念",slug:"概念",children:[]},{level:3,title:"功能",slug:"功能",children:[]},{level:3,title:"优缺点",slug:"优缺点",children:[]},{level:3,title:"代码例子：",slug:"代码例子",children:[]}]}],path:"/JavaSE/Java%20Reflection.html",pathLocale:"/",extraFields:[]},{title:"Protected访问权限",headers:[{level:2,title:"关于Protected的访问权限",slug:"关于protected的访问权限",children:[]}],path:"/JavaSE/Protected%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90.html",pathLocale:"/",extraFields:[]},{title:"单例模式",headers:[{level:2,title:"单例模式",slug:"单例模式",children:[]},{level:2,title:"饿汉单例",slug:"饿汉单例",children:[]},{level:2,title:"懒汉单例",slug:"懒汉单例",children:[]}],path:"/JavaSE/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"关于InnoDB的架构",headers:[{level:3,title:"关于InnoDB的架构",slug:"关于innodb的架构",children:[]},{level:2,title:"",slug:"",children:[]}],path:"/MySQL/InnoDB%E6%9E%B6%E6%9E%84.html",pathLocale:"/",extraFields:[]},{title:"关于InnoDB的逻辑存储结构",headers:[{level:2,title:"关于InnoDB的逻辑存储结构",slug:"关于innodb的逻辑存储结构",children:[{level:3,title:"表空间",slug:"表空间",children:[]},{level:3,title:"段",slug:"段",children:[]},{level:3,title:"区",slug:"区",children:[]},{level:3,title:"页",slug:"页",children:[]},{level:3,title:"行",slug:"行",children:[]}]}],path:"/MySQL/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/404.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/about/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/mood/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/link/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/tag/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/archive/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/aurora-coze/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/register/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/photo/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/next-mood/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/aurora-archive/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/aurora-music/",pathLocale:"/",extraFields:[]}]},5220:(e,a,t)=>{t.d(a,{H:()=>l});const l={base:"/lrekiblog/",lang:"zh-CN",title:"I do not follow,i lives is always all you want",description:"",head:[["script",{src:"https://at.alicdn.com/t/font_2849934_v6y652peian.js"}],["link",{href:"/iconphoto/avater.jpg",rel:"icon"}],["link",{rel:"stylesheet",type:"text/css",href:"//at.alicdn.com/t/font_2932340_r7zitafg82.css"}]],locales:{}}},2232:(e,a,t)=>{t.d(a,{f:()=>l});const l={navbar:[{text:"好用网站",iconClass:"aurora-navbar-si-glyph-glass-water",children:[{text:"一些学习网站",children:[{text:"bilibili",link:"https://www.bilibili.com/"},{text:"菜鸟教程",link:"https://www.runoob.com/"},{text:"黑马程序员",link:"https://www.itheima.com/"}]},{text:"搜索引擎",children:[{text:"百度",link:"https://www.baidu.com/"},{text:"谷歌",link:"https://www.google.com/"}]},{text:"工具",children:[{text:"阿里图标",link:"https://www.iconfont.cn/"},{text:"maven仓库",link:"https://mvnrepository.com/"},{text:"Sprite Cow",link:"http://www.spritecow.com/"}]}]},{text:"后端学习",iconClass:"aurora-navbar-si-glyph-billiard-ball",children:[{text:"设计模式",children:["/JavaSE/单例模式.md"]},{text:"Java知识",children:["/JavaSE/Java Reflection.md"]},{text:"数据库",children:["/base/docs.md"]}]},{text:"问题和bug",iconClass:"aurora-navbar-shoulijindu-xuanzhong",children:[{text:"node安装教程",children:["/node.md"]},{text:"bug",children:["/issue/bug.md"]},{text:"更新日志",children:["/issue/CHANGELOG.md"]},{text:"运行常见错误",children:["/issue/common.md"]}]},{text:"我的扩展",iconClass:"aurora-navbar-weather",children:[{children:["/home/deploy.md"],text:"home"},{children:["/comment/README.md","/page/README.md"],text:"其他配置"},{text:"webpack和vite切换",children:["/base/vite-webpack.md"]}]},{text:"一些前端",iconClass:"aurora-navbar-si-glyph-egg",children:[{children:["/plugin/archive/readme.md"],text:"时间轴"},{children:["/plugin/bubble/readme.md"],text:"浪漫气泡"},{children:["/plugin/coze/readme.md"],text:"说说"},{children:["/plugin/player/readme.md"],text:"音乐播放器"},{text:"看板娘",children:["/style/live2d.md"]}]},{text:"标签",iconClass:"aurora-navbar-a-ziyuan107",link:"/tag"},{text:"我的Github",link:"https://github.com/vuepress-aurora/vuepress-theme-aurora",iconClass:"aurora-navbar-github1"}],darkMode:!1,repo:"https://github.com/qsyyke/vuepress-theme-aurora",repoIconClass:"aurora-navbar-github",docsRepo:"https://github.com/qsyyke/aurora-docs",githubActions:!1,docsBranch:"main",repoLabel:"Aurora-theme",editLink:!0,editLinkText:"edit",lastUpdated:!0,lastUpdatedText:"lastTime",logoColor:"#2c3e50",showFont:"程",heroImg:"/iconphoto/avater.jpg",logo:"/iconphoto/avater.jpg",lazyLoadingImg:"/ljz.gif",homePageLazyLoadingImg:"/aurora-loading.gif",customRandomSay:!1,customRandomValue:"Vuepress-theme-Aurora",socials:[{aHref:"tencent://message/?uin=2291308094",isHome:!1,show:!1,sidebar:!1,symbol:"#icon-qq"},{aHref:"javascript:;",showImgSrc:"/wechat.jpg",isHome:!0,show:!1,symbol:"#icon-weixin",sidebar:!0},{aHref:"https://github.com/qsyyke/",isHome:!0,show:!1,sidebar:!0,symbol:"#icon-github-fill"},{aHref:"https://stackoverflow.com/",isHome:!0,show:!1,symbol:"#icon-stackoverflow",sidebar:!0},{aHref:"https://space.bilibili.com/483962286",isHome:!0,show:!1,sidebar:!0,symbol:"#icon-bilibili-1"},{aHref:"https://music.163.com/#/user/home?id=1411050784",isHome:!0,show:!1,symbol:"#icon-wangyiyunyinle",sidebar:!0},{aHref:"mailto:2291308094@qq.com",isHome:!0,show:!1,sidebar:!0,symbol:"#icon-email"}],logoTitle:"lreki",headTitle:"this is headTitle",description:"vuepress-theme-Aurora是一款简洁，美观，功能强大的静态主题",keyword:"vuepress主题,vuepress theme,生活琐事,二次元博客,简约博客,博客主题,静态主题",slideTime:3e5,randomSaw:"https://international.v1.hitokoto.cn/?c=i&max_length=45",about:[{bar:!1,title:"我?",describe:["这是关于页面支持html<a href='https://blog.cco.vin' target='_blank'>这是一个标签</a>","目前是一名大三学生,CS专业,坐标西南边陲","喜欢安静,不喜社交","喜欢听音乐,什么类型都可","喜欢技术,coding","目前正在学习java后端",'最喜欢的电影是"忠犬八公的故事",梦想以后独居也能有一只"Hachi"',"主题是我自己开发的，前端太菜了，如果有bug，希望大家多多包涵`Σ(￣□￣||)` ","有点懒","目前除了编程没有什么兴趣爱好","正在追的番有《百妖谱》,《致不灭的你》,《少年歌行》,《鬼灭之刃》,《关于我转生变成史莱姆这档事》...","喜欢小说，喜欢的作者是--十月流年，最喜欢的小说《至尊修罗》,《一念永恒》,《星辰变》"],tag:["coding","社恐","番剧","电影","安静","音乐","小说","宅","懒"],showTag:!0},{bar:!1,title:"大三规划",describe:["做项目","软考二级","英语四级","想找实习","复习数据结构","驾照","做点什么有意义的事"],tag:["大家加油呀`Σ(￣□￣||)` ..."],showTag:!0},{bar:!1,title:"未来规划",describe:["后端工程师","赚money"],tag:["忘记过去，展望未来"],showTag:!0},{bar:!0,title:"技  能",describe:[{name:"java",score:70},{name:"HTML5",score:87},{name:"javascript",score:82},{name:"css",score:73},{name:"python",score:50},{name:"redis",score:59},{name:"mysql",score:82},{name:"vue",score:60},{name:"spring",score:71},{name:"springMVC",score:77},{name:"springBoot",score:71}],showTag:!1},{showTag:!1,bar:!0,title:"掌握框架",describe:[{name:"spring",score:79},{name:"springMVC",score:81},{name:"springBoot",score:82},{name:"mybatis",score:82},{name:"vue",score:60},{name:"dubbo",score:61}]},{bar:!0,showTag:!1,title:"掌握技能",describe:[{name:"jetbrains",score:75},{name:"linux",score:68},{name:"git",score:78},{name:"Ctrl C V",score:100}]},{title:"关于主题",describe:["theme-ccds主题是我自己独立开发，是一款基于vuepress，对默认主题进行了大量修改，我以前使用的是wordpress的博客主题，但是我对PHP不了解，想改成自己想要的主题，太难了，最近在学vue，正好看到可以使用vuepress来搭建 博客，就将默认主题改成现在这个样，并且喜欢vuepress的最主要原因是，它可以 直接将本地的markdown文档进行编译部署，我原来博客，我记了几个月的笔记，不太想再慢慢从本地复制到WordPress进行发布，以至于博客几个月没有发布文章了，虽然有技术可以解决，但还是喜欢vuepress，简直是懒癌福音，如果你喜欢的话，可以在我的GitHub进行下载，使用文档可以查看https://aurora.xcye.xyz，该主题已将所有的配置进行抽离，你现在看到的所有信息，都抽离在了一个配置文件中，但是目前还并不能做到开箱即用，如果使用的人多了，我可以进行修改，并且我自己也写了几个组件，包括文章页面看到的顶部图片，友情链接，海报分享功能等等 ，可以在你想使用的地方，直接使用这些组件就可以，该主题我加入了vuex，对前端不太了解，有很多css不对的地方，请大家多多包涵，Thanks♪(･ω･)ﾉ"]},{bar:!1,title:"更新日志",describe:["开发永不止步......","2021.9.12 增加相册功能，解决已知bug","2021.9.9 增加海报分享功能","2021.9.5 重新修改文章SEO自动配置，使用新规则，解决从tag页面进入文章页面，懒加载失效问题","2021.9.4 重新初始化仓库","2.21.8.10 -- 2021.9 主题开发"],tag:["想求个star`(⌒▽⌒)`"],showTag:!0},{title:"主题后续计划及闲话",bar:!1,tag:[],showTag:!1,describe:["为说说页面增加随时发布，随时修改功能","增加每日计划打卡功能"]}],randomColor:["#ffcad4","#d8e2dc","#8d99ae","#b8f2e6","#84c7d0","#aed9e0","#00b4d8","#caf0f8","#fbc4ab","#fdc5f5","#84dcc6","#a9def9","#fcf6bd","#f0a6ca","#b9faf8","#42a5f5","#ff9800","#b39ddb","#6d45bb","#b388ff","#1565c0","#26c6da","#5e548e","#90f1ef","#5b5f97","#bbe6e4","#42bfdd","#72ddf7","#8093f1","#9ed8d8","#7ea8be","#ef90b3","#b892ef","#c0b9dd","#c0d9dd","#75c9c8","#ded9e2","#b5e2fa","#62b6cb","#5fa8d3","#0fa3b1","#b5e2fa","#5fa8d3","#62b6cb","#b892ff"],maxFontColorArr:8,fontColor:["#2c3e50","#42a5f5","#8093f1","#FF6EC7","#FF7F00","#8FBC8F","#EAADEA","#3299CC","#CDCDCD","#CC3299","#FF7F00","#2F4F4F"],friendLinks:[],siteInformation:{title:"Aurora-theme",url:"https://aurora.cco.vin",logo:"/avatar.jpg",describe:"vuepress-theme-Aurora是一款简洁，美观，功能强大的静态主题",cover:"/my-cover.png",contact:"email: cqycco@gmail.com, qq:2291308094",otherDescribe:["申请友链请按照下面格式，在此页面留言，我看到就会进行添加","博客名称    博客地址      博客描述      博客logo","友链申请要求","拒绝涉政/涉黄/太多广告/盈利性站点","站点能正常访问",'这是一个html的测试<a href="https://aurora.xcye.xyz" target="_blank">这是一个a标签</a>']},fontFamily:["-apple-system","hlt","tzt","sst","lf","xsf","lsf","cgt"],footer:[],isShowFooter:!0,isShowThemeCopyright:!0,isShowRunTime:!0,startRunTime:"1/29/2022 15:22:00",prefixRuntime:"小破站已运行",message:[],recommendPageLength:30,recommendNoTitle:"`╮(￣▽￣)╭`",tagNoTitle:"暂时还没有标题哟",mood:"青衫烟雨客",isFitter:!0,defaultBorderRadius:10,defaultOpacity:1,isHomePageFollow:!1,defaultBlur:1,split:"~",donate:{donateImg:["/aurora/wxpay.png","/aurora/zfbpay.jpg"],articlePage:!1,aboutPage:!1,donateProduct:[{name:"奶茶",img:"/aurora/nc.jpeg",price:18,prefix:"$"},{name:"全味奶茶",img:"/aurora/image-20210911233612031.png?",price:11,prefix:"￥"}],donateList:[{name:"初尘",msg:"主题太棒了",img:"/aurora/nc.jpeg",price:7,prefix:"￥"}]},comment:{showComment:!1,serverURL:"https://aurora-local-7hrjb6mp8-qsyyke.vercel.app/",emojis:["https://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/alus","https://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/bilibili","https://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/tieba","https://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/weibo"],avatar:"monsterid"},poster:{description:"希望可以分享一些有趣的知识帮助到你",author:"lreki",preBlog:" ",suffixBlog:"  ",avatar:"/iconphoto/avater.jpg"},showOnlineMood:!0,showMoodEdit:!1,addMood:{siteName:"localhost:8080",appId:"q4LlYVTTk2r39sNrJr7BL9A6p",appKey:"VxezWTppppyX2LTx4TUK8w6e2"},customTopImg:{custom:!0,page:["/bg/background.jpg"],friend:["/bg/background.jpg"],tag:["/bg/background.jpg"],mood:["/bg/background.jpg"]},homeWps:["/bg/1.jpg","/bg/4.jpg"],homeWpsMobile:["/bg/1.jpg","/bg/4.jpg"],pageSize:4,githubUrl:"https://github.com/qsyyke/vuepress-theme-aurora",latestPageSize:6,showHomePageImg:!1,sidebarCatalogLevel:3,homePageImgApi:"https://api.woodwhale.top/random.php",mobileCutText:"lreki",sidebarTag:"categories",showAddMood:!0,postImgApi:"/bg/1.jpg",articleH2Icon:"🌸",articleH3Icon:"🐳",articleH4Icon:"⛄",sidebarAvatar:"/iconphoto/avater.jpg",sugCountPerMin:300,showRecommend:!1,articlePagination:!0,global:{sidebar:{showStatus:!0,perData:!1,social:!1,friendLink:!0,navbar:!1,latestPage:!0,message:!1,tag:!0,siteData:!1},footer:!1},excludePath:["/footer.html","/v1.3.0/","/plugin/","/node.html","/style.html"],categoriesIncludeFolderName:!1,wave:{showWave:!1},bubble:{show:!0,bubbleNumber:.14,bubbleAlpha:.6,alphaChangeSpeed:1e-5,size:.4,sizeChangeSpeed:2e-4,riseSpeed:.4,color:"255,255,255"},leanCloud:{appId:"2A2Dyd2AffrnldhwftlEddVn-MdYXbMMI",appKey:"qHYTbb91iOPLelyC9lpbXxLH",masterKey:"eUwfvS3luIPnPiHS5SpEhDYr"},showPageMeta:!0,randomSayApi:{method:"GET",urlApi:"https://v1.hitokoto.cn/?encode=text&c=i"},afDianUrl:"https://afdian.net/@qsyyke",homeTopText:"置顶",sidebarDesc:"希望今天也会是你最棒最开心的一天！",showAboutPageBubble:!0,locales:{"/":{selectLanguageName:"English"}},selectLanguageText:"Languages",selectLanguageAriaLabel:"Select language",sidebar:"auto",sidebarDepth:2,contributors:!0,contributorsText:"Contributors",notFound:["There's nothing here.","How did we get here?","That's a Four-Oh-Four.","Looks like we've got some broken links."],backToHome:"Take me home",openInNewWindow:"open in new window"}},4125:(e,a,t)=>{t.d(a,{Z:()=>l});const l=[{data:{key:"v-53329e14",path:"/JavaSE/BigDecimal()%E6%96%B9%E6%B3%95%E6%B3%A8%E6%84%8F%E7%82%B9.html",title:"BigDecimal()方法注意点",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,description:"关于BigDecimal()方法注意点",title:"BigDecimal()方法注意点",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"关于BigDecimal()方法",slug:"关于bigdecimal-方法",children:[]}],git:{}},key:"v-53329e14",path:"/JavaSE/BigDecimal()%E6%96%B9%E6%B3%95%E6%B3%A8%E6%84%8F%E7%82%B9.html",title:"BigDecimal()方法注意点",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,description:"关于BigDecimal()方法注意点",title:"BigDecimal()方法注意点",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"关于BigDecimal()方法",slug:"关于bigdecimal-方法",children:[]}],content:'## 关于BigDecimal()方法 \r\n\r\n#### 注意：禁止使用构造方法 BigDecimal(double)的方式把 double 值转化为 BigDecimal 对象！ \r\n\r\n说明：BigDecimal(double)存在精度损失风险，在精确计算或值比较的场景中可能会导致业务逻辑异常。\r\n>如：BigDecimal g = new BigDecimal(0.1F); 实际的存储值为：0.10000000149 \r\n\r\n正例：优先推荐入参为 String 的构造方法，或使用 BigDecimal 的 valueOf 方法，此方法内部其实执行了 Double 的 toString，而 Double 的 toString 按 double 的实际能表达的精度对尾数进行了截断。\r\n```\r\n BigDecimal recommend1 = new BigDecimal("0.1"); \r\n BigDecimal recommend2 = BigDecimal.valueOf(0.1);\r\n```\r\n',contentRendered:'<h2 id="关于bigdecimal-方法" tabindex="-1"><a class="header-anchor" href="#关于bigdecimal-方法" aria-hidden="true">#</a> 关于BigDecimal()方法</h2>\n<h4 id="注意-禁止使用构造方法-bigdecimal-double-的方式把-double-值转化为-bigdecimal-对象" tabindex="-1"><a class="header-anchor" href="#注意-禁止使用构造方法-bigdecimal-double-的方式把-double-值转化为-bigdecimal-对象" aria-hidden="true">#</a> 注意：禁止使用构造方法 BigDecimal(double)的方式把 double 值转化为 BigDecimal 对象！</h4>\n<p>说明：BigDecimal(double)存在精度损失风险，在精确计算或值比较的场景中可能会导致业务逻辑异常。</p>\n<blockquote>\n<p>如：BigDecimal g = new BigDecimal(0.1F); 实际的存储值为：0.10000000149</p>\n</blockquote>\n<p>正例：优先推荐入参为 String 的构造方法，或使用 BigDecimal 的 valueOf 方法，此方法内部其实执行了 Double 的 toString，而 Double 的 toString 按 double 的实际能表达的精度对尾数进行了截断。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> BigDecimal recommend1 = new BigDecimal("0.1"); \n BigDecimal recommend2 = BigDecimal.valueOf(0.1);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/JavaSE/BigDecimal()方法注意点.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"BigDecimal()方法注意点",filePath:"D:/blog/blog-demo/docs/JavaSE/BigDecimal()方法注意点.md",filePathRelative:"JavaSE/BigDecimal()方法注意点.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/BigDecimal()方法注意点.html.vue",componentFilePathRelative:"pages/JavaSE/BigDecimal()方法注意点.html.vue",componentFileChunkName:"v-53329e14",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/BigDecimal()方法注意点.html.js",dataFilePathRelative:"pages/JavaSE/BigDecimal()方法注意点.html.js",dataFileChunkName:"v-53329e14",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/JavaSE/BigDecimal()方法注意点.html",htmlFilePathRelative:"JavaSE/BigDecimal()方法注意点.html"},{data:{key:"v-53084daf",path:"/JavaSE/Java%20Reflection.html",title:"Java Reflection",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,description:"Java的反射",title:"Java Reflection",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"Java的反射「Reflection」",slug:"java的反射「reflection」",children:[{level:3,title:"概念",slug:"概念",children:[]},{level:3,title:"功能",slug:"功能",children:[]},{level:3,title:"优缺点",slug:"优缺点",children:[]},{level:3,title:"代码例子：",slug:"代码例子",children:[]}]}],git:{}},key:"v-53084daf",path:"/JavaSE/Java%20Reflection.html",title:"Java Reflection",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,description:"Java的反射",title:"Java Reflection",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"Java的反射「Reflection」",slug:"java的反射「reflection」",children:[{level:3,title:"概念",slug:"概念",children:[]},{level:3,title:"功能",slug:"功能",children:[]},{level:3,title:"优缺点",slug:"优缺点",children:[]},{level:3,title:"代码例子：",slug:"代码例子",children:[]}]}],content:'## Java的反射「Reflection」 \r\n \r\n### 概念 \r\n&ensp; 反射「Reflection」是Java被视为动态语言的关键，反射机制允许程序在执行期间借助Reflection API取得任何类的内部信息，并能直接操作任意对象内部属性及方法，如 \r\n>Class c = Class.forName("java.lang.String")  \r\n>Class c = 类名.class&ensp; (常用)\r\n\r\n&ensp; 加载完类以后，在堆内存的方法区中就产生了一个Class类型的对象（一个类只有一个Class对象），这个对象就包含了完整的类的结构信息。我们可以通过这个对象看到类的结构。这个对象就像是一面镜子，透过这个镜子可以看到类的结构，所以称之为反射。 \r\n+ 正常方式； 引入需要的包类名称 -> 通过new实例化 -> 取得实例化对象 \r\n+ 反射方式：实例化对象 -> getClass()方法 -> 得到完整的包类名称 \r\n \r\n### 功能\r\n+ 在运行时判断任意一个对象所属的类\r\n+ 在运行时构造任意一个类的对象\r\n+ 在运行时判断任意一个类所具有的成员变量和方法\r\n+ 在运行时获取泛型信息\r\n+ 在运行时调用任意一个对象的成员变量和方法\r\n+ 在运行时处理注解\r\n+ 生成动态代理（AOP） \r\n \r\n### 优缺点 \r\n+ 优点:\r\n + 可以实现动态创建对象和编译，体现出很大的灵活性 \r\n+ 缺点:\r\n + 对性能有影响，使用反射基本上是一种解释操作，这类操作总是安于直接执行相同的操作，速度上的差距大概是几十倍 \r\n\r\n### 代码例子： \r\n```\r\npublic static void main(String[] args) throws ClassNotFoundException {\r\n    // 通过反射获取类的class对象\r\n    Class c1 = Class.forName("reflection.User");\r\n    Class c2 = Class.forName("reflection.User");\r\n    System.out.println(c1);\r\n    System.out.println(c1.hashCode());\r\n    System.out.println(c2.hashCode());\r\n    // 一个类在内存中只有一个Class对象\r\n    // 一个类被加载后，类的整个结构都会被封装在Class对象中\r\n    System.out.println(c1 == c2);   //输出true\r\n}\r\n```\r\n',contentRendered:'<h2 id="java的反射「reflection」" tabindex="-1"><a class="header-anchor" href="#java的反射「reflection」" aria-hidden="true">#</a> Java的反射「Reflection」</h2>\n<h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3>\n<p>  反射「Reflection」是Java被视为动态语言的关键，反射机制允许程序在执行期间借助Reflection API取得任何类的内部信息，并能直接操作任意对象内部属性及方法，如</p>\n<blockquote>\n<p>Class c = Class.forName(&quot;java.lang.String&quot;)<br>\nClass c = 类名.class  (常用)</p>\n</blockquote>\n<p>  加载完类以后，在堆内存的方法区中就产生了一个Class类型的对象（一个类只有一个Class对象），这个对象就包含了完整的类的结构信息。我们可以通过这个对象看到类的结构。这个对象就像是一面镜子，透过这个镜子可以看到类的结构，所以称之为反射。</p>\n<ul>\n<li>正常方式； 引入需要的包类名称 -&gt; 通过new实例化 -&gt; 取得实例化对象</li>\n<li>反射方式：实例化对象 -&gt; getClass()方法 -&gt; 得到完整的包类名称</li>\n</ul>\n<h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h3>\n<ul>\n<li>在运行时判断任意一个对象所属的类</li>\n<li>在运行时构造任意一个类的对象</li>\n<li>在运行时判断任意一个类所具有的成员变量和方法</li>\n<li>在运行时获取泛型信息</li>\n<li>在运行时调用任意一个对象的成员变量和方法</li>\n<li>在运行时处理注解</li>\n<li>生成动态代理（AOP）</li>\n</ul>\n<h3 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点" aria-hidden="true">#</a> 优缺点</h3>\n<ul>\n<li>优点:</li>\n<li>可以实现动态创建对象和编译，体现出很大的灵活性</li>\n<li>缺点:</li>\n<li>对性能有影响，使用反射基本上是一种解释操作，这类操作总是安于直接执行相同的操作，速度上的差距大概是几十倍</li>\n</ul>\n<h3 id="代码例子" tabindex="-1"><a class="header-anchor" href="#代码例子" aria-hidden="true">#</a> 代码例子：</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>public static void main(String[] args) throws ClassNotFoundException {\n    // 通过反射获取类的class对象\n    Class c1 = Class.forName("reflection.User");\n    Class c2 = Class.forName("reflection.User");\n    System.out.println(c1);\n    System.out.println(c1.hashCode());\n    System.out.println(c2.hashCode());\n    // 一个类在内存中只有一个Class对象\n    // 一个类被加载后，类的整个结构都会被封装在Class对象中\n    System.out.println(c1 == c2);   //输出true\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/JavaSE/Java Reflection.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Java Reflection",filePath:"D:/blog/blog-demo/docs/JavaSE/Java Reflection.md",filePathRelative:"JavaSE/Java Reflection.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/Java Reflection.html.vue",componentFilePathRelative:"pages/JavaSE/Java Reflection.html.vue",componentFileChunkName:"v-53084daf",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/Java Reflection.html.js",dataFilePathRelative:"pages/JavaSE/Java Reflection.html.js",dataFileChunkName:"v-53084daf",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/JavaSE/Java Reflection.html",htmlFilePathRelative:"JavaSE/Java Reflection.html"},{data:{key:"v-7b8006fc",path:"/JavaSE/Protected%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90.html",title:"Protected访问权限",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,keyword:"访问权限",description:"Protected访问权限",title:"Protected访问权限",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"关于Protected的访问权限",slug:"关于protected的访问权限",children:[]}],git:{}},key:"v-7b8006fc",path:"/JavaSE/Protected%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90.html",title:"Protected访问权限",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,keyword:"访问权限",description:"Protected访问权限",title:"Protected访问权限",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"关于Protected的访问权限",slug:"关于protected的访问权限",children:[]}],content:"## 关于Protected的访问权限\r\n\r\n1. 子类可以通过继承获得不同包父类的protected权限成员变量和成员方法，在子类中可以直接访问\r\n\r\n2. 在子类中可以通过子类的对象访问父类的protected成员变量和方法\r\n\r\n3. 在子类中反而不能通过父类的对象访问父类的protected成员变量和方法\r\n\r\n4. 在子类中不能通过其他子类的对象访问父类的protected成员变量和方法\r\n\r\n5. 在与子类同包的其他类中不能通过子类的对象访问父类的protected成员变量和方法\r\n————————————————\r\n\r\n[原文链接](https://blog.csdn.net/qq_32907195/article/details/108403463)",contentRendered:'<h2 id="关于protected的访问权限" tabindex="-1"><a class="header-anchor" href="#关于protected的访问权限" aria-hidden="true">#</a> 关于Protected的访问权限</h2>\n<ol>\n<li>\n<p>子类可以通过继承获得不同包父类的protected权限成员变量和成员方法，在子类中可以直接访问</p>\n</li>\n<li>\n<p>在子类中可以通过子类的对象访问父类的protected成员变量和方法</p>\n</li>\n<li>\n<p>在子类中反而不能通过父类的对象访问父类的protected成员变量和方法</p>\n</li>\n<li>\n<p>在子类中不能通过其他子类的对象访问父类的protected成员变量和方法</p>\n</li>\n<li>\n<p>在与子类同包的其他类中不能通过子类的对象访问父类的protected成员变量和方法\n————————————————</p>\n</li>\n</ol>\n<p><a href="https://blog.csdn.net/qq_32907195/article/details/108403463" target="_blank" rel="noopener noreferrer">原文链接<ExternalLinkIcon/></a></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/JavaSE/Protected访问权限.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Protected访问权限",filePath:"D:/blog/blog-demo/docs/JavaSE/Protected访问权限.md",filePathRelative:"JavaSE/Protected访问权限.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/Protected访问权限.html.vue",componentFilePathRelative:"pages/JavaSE/Protected访问权限.html.vue",componentFileChunkName:"v-7b8006fc",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/Protected访问权限.html.js",dataFilePathRelative:"pages/JavaSE/Protected访问权限.html.js",dataFileChunkName:"v-7b8006fc",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/JavaSE/Protected访问权限.html",htmlFilePathRelative:"JavaSE/Protected访问权限.html"},{data:{key:"v-27124a64",path:"/JavaSE/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",title:"单例模式",lang:"zh-CN",frontmatter:{date:"2022/2/8 20:08",sticky:!1,keyword:"单例模式",description:"常见的单例模式",title:"单例模式",tag:["单例模式","JavaSE"]},excerpt:"",headers:[{level:2,title:"单例模式",slug:"单例模式",children:[]},{level:2,title:"饿汉单例",slug:"饿汉单例",children:[]},{level:2,title:"懒汉单例",slug:"懒汉单例",children:[]}],git:{}},key:"v-27124a64",path:"/JavaSE/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",title:"单例模式",lang:"zh-CN",frontmatter:{date:"2022/2/8 20:08",sticky:!1,keyword:"单例模式",description:"常见的单例模式",title:"单例模式",tag:["单例模式","JavaSE"]},excerpt:"",headers:[{level:2,title:"单例模式",slug:"单例模式",children:[]},{level:2,title:"饿汉单例",slug:"饿汉单例",children:[]},{level:2,title:"懒汉单例",slug:"懒汉单例",children:[]}],content:'## 单例模式\n单例模式可以保证系统中，应用该模式的这个类永远只有一个实例，即一个类永远只能创建一个对象。  \n例如任务管理器对象我们只需要一个就可以解决问题了，这样可以节省内存空间。\n* 单例的实现方式很多\n  *  饿汉单例模式。\n  *  懒汉单例模式。\n  *  ......\n\n## 饿汉单例\n设计模式：  \n在用类获取对象的时候，对象已经提前为你创建好了。\n\n设计步骤：  \n1. 定义一个类，把构造器私有。  \n2. 定义一个静态变量存储一个对象。\n```\n/** a、定义一个单例类 */\npublic class SingleInstance { \n    /** c.定义一个静态变量存储一个对象即可 :属于类，与类一起加载一次 */ \n    public static SingleInstance instance = new SingleInstance ();  \n    /** b.单例必须私有构造器*/ \n    private SingleInstance (){     \n            System.out.println("创建了一个对象");    \n    }\n}\n```\n## 懒汉单例  \n设计模式：  \n在真正需要该对象的时候，才去创建一个对象(延迟加载对象)。\n设计步骤：\n1. 定义一个类，把构造器私有。\n2. 定义一个静态变量存储一个对象。\n3. 提供一个返回单例对象的方法  \n```\n/** 定义一个单例类 */\nclass SingleInstance2{   \n     /** 定义一个静态变量存储一个对象即可 :属于类，与类一起加载一次 */   \n    public static SingleInstanc2e instance ; // null\n          \n        private SingleInstance2(){ /** 单例必须私有构造器*/ \n\n        }   \n            \n            public static SingleInstance2 getInstance(){\n                /** 必须提供一个方法返回一个单例对象  */\n                if(instance == null)\n                    instance = new SingleInstance2();   \n            return instance;\n    }\n}\n```\n\n\n\n\n\n\n',contentRendered:'<h2 id="单例模式" tabindex="-1"><a class="header-anchor" href="#单例模式" aria-hidden="true">#</a> 单例模式</h2>\n<p>单例模式可以保证系统中，应用该模式的这个类永远只有一个实例，即一个类永远只能创建一个对象。<br>\n例如任务管理器对象我们只需要一个就可以解决问题了，这样可以节省内存空间。</p>\n<ul>\n<li>单例的实现方式很多\n<ul>\n<li>饿汉单例模式。</li>\n<li>懒汉单例模式。</li>\n<li>......</li>\n</ul>\n</li>\n</ul>\n<h2 id="饿汉单例" tabindex="-1"><a class="header-anchor" href="#饿汉单例" aria-hidden="true">#</a> 饿汉单例</h2>\n<p>设计模式：<br>\n在用类获取对象的时候，对象已经提前为你创建好了。</p>\n<p>设计步骤：</p>\n<ol>\n<li>定义一个类，把构造器私有。</li>\n<li>定义一个静态变量存储一个对象。</li>\n</ol>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/** a、定义一个单例类 */\npublic class SingleInstance { \n    /** c.定义一个静态变量存储一个对象即可 :属于类，与类一起加载一次 */ \n    public static SingleInstance instance = new SingleInstance ();  \n    /** b.单例必须私有构造器*/ \n    private SingleInstance (){     \n            System.out.println("创建了一个对象");    \n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="懒汉单例" tabindex="-1"><a class="header-anchor" href="#懒汉单例" aria-hidden="true">#</a> 懒汉单例</h2>\n<p>设计模式：<br>\n在真正需要该对象的时候，才去创建一个对象(延迟加载对象)。\n设计步骤：</p>\n<ol>\n<li>定义一个类，把构造器私有。</li>\n<li>定义一个静态变量存储一个对象。</li>\n<li>提供一个返回单例对象的方法</li>\n</ol>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/** 定义一个单例类 */\nclass SingleInstance2{   \n     /** 定义一个静态变量存储一个对象即可 :属于类，与类一起加载一次 */   \n    public static SingleInstanc2e instance ; // null\n          \n        private SingleInstance2(){ /** 单例必须私有构造器*/ \n\n        }   \n            \n            public static SingleInstance2 getInstance(){\n                /** 必须提供一个方法返回一个单例对象  */\n                if(instance == null)\n                    instance = new SingleInstance2();   \n            return instance;\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/JavaSE/单例模式.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"单例模式",filePath:"D:/blog/blog-demo/docs/JavaSE/单例模式.md",filePathRelative:"JavaSE/单例模式.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/单例模式.html.vue",componentFilePathRelative:"pages/JavaSE/单例模式.html.vue",componentFileChunkName:"v-27124a64",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/单例模式.html.js",dataFilePathRelative:"pages/JavaSE/单例模式.html.js",dataFileChunkName:"v-27124a64",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/JavaSE/单例模式.html",htmlFilePathRelative:"JavaSE/单例模式.html"},{data:{key:"v-d7c5ecf2",path:"/MySQL/InnoDB%E6%9E%B6%E6%9E%84.html",title:"关于InnoDB的架构",lang:"zh-CN",frontmatter:{date:"2022/4/14 8:27",sticky:!1,description:"关于InnoDB的架构",title:"关于InnoDB的架构",tag:["MySQL","InnoDB"]},excerpt:"",headers:[{level:3,title:"关于InnoDB的架构",slug:"关于innodb的架构",children:[]},{level:2,title:"",slug:"",children:[]}],git:{}},key:"v-d7c5ecf2",path:"/MySQL/InnoDB%E6%9E%B6%E6%9E%84.html",title:"关于InnoDB的架构",lang:"zh-CN",frontmatter:{date:"2022/4/14 8:27",sticky:!1,description:"关于InnoDB的架构",title:"关于InnoDB的架构",tag:["MySQL","InnoDB"]},excerpt:"",headers:[{level:3,title:"关于InnoDB的架构",slug:"关于innodb的架构",children:[]},{level:2,title:"",slug:"",children:[]}],content:"### 关于InnoDB的架构  \r\n## ",contentRendered:'<h3 id="关于innodb的架构" tabindex="-1"><a class="header-anchor" href="#关于innodb的架构" aria-hidden="true">#</a> 关于InnoDB的架构</h3>\n<h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> </h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/MySQL/InnoDB架构.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"InnoDB架构",filePath:"D:/blog/blog-demo/docs/MySQL/InnoDB架构.md",filePathRelative:"MySQL/InnoDB架构.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/MySQL/InnoDB架构.html.vue",componentFilePathRelative:"pages/MySQL/InnoDB架构.html.vue",componentFileChunkName:"v-d7c5ecf2",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/MySQL/InnoDB架构.html.js",dataFilePathRelative:"pages/MySQL/InnoDB架构.html.js",dataFileChunkName:"v-d7c5ecf2",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/MySQL/InnoDB架构.html",htmlFilePathRelative:"MySQL/InnoDB架构.html"},{data:{key:"v-1cb8f391",path:"/MySQL/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.html",title:"关于InnoDB的逻辑存储结构",lang:"zh-CN",frontmatter:{date:"2022/4/13 17:21",sticky:!1,description:"关于InnoDB的逻辑存储结构",title:"关于InnoDB的逻辑存储结构",tag:["MySQL"]},excerpt:"",headers:[{level:2,title:"关于InnoDB的逻辑存储结构",slug:"关于innodb的逻辑存储结构",children:[{level:3,title:"表空间",slug:"表空间",children:[]},{level:3,title:"段",slug:"段",children:[]},{level:3,title:"区",slug:"区",children:[]},{level:3,title:"页",slug:"页",children:[]},{level:3,title:"行",slug:"行",children:[]}]}],git:{}},key:"v-1cb8f391",path:"/MySQL/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.html",title:"关于InnoDB的逻辑存储结构",lang:"zh-CN",frontmatter:{date:"2022/4/13 17:21",sticky:!1,description:"关于InnoDB的逻辑存储结构",title:"关于InnoDB的逻辑存储结构",tag:["MySQL"]},excerpt:"",headers:[{level:2,title:"关于InnoDB的逻辑存储结构",slug:"关于innodb的逻辑存储结构",children:[{level:3,title:"表空间",slug:"表空间",children:[]},{level:3,title:"段",slug:"段",children:[]},{level:3,title:"区",slug:"区",children:[]},{level:3,title:"页",slug:"页",children:[]},{level:3,title:"行",slug:"行",children:[]}]}],content:"## 关于InnoDB的逻辑存储结构 \r\n\r\n![InnoDB的逻辑存储结构](https://wx1.sinaimg.cn/mw690/ae168f56gy1h19bfdlf1lj20q10dk0tn.jpg)\r\n\r\n### 表空间\r\n&ensp; 表空间是InnoDB存储引擎逻辑结构的最高层，如果用户启用了参数 innodb_file_per_table(在8.0版本中默认开启)，则每张表都会有一个表空间（xxx.ibd），一个mysql实例可以对应多个表空间，用于存储记录、索引等数据。 \r\n\r\n### 段\r\n&ensp; 段，分为数据段（Leaf node segment）、索引段（Non-leaf node segment）、回滚段（Rollback segment），InnoDB是索引组织表，数据段就是B+树的叶子节点， 索引段即为B+树的非叶子节点。段用来管理多个Extent（区）。 \r\n\r\n###  区\r\n&ensp; 区，表空间的单元结构，每个区的大小为1M。 默认情况下， InnoDB存储引擎页大小为16K， 即一个区中一共有64个连续的页。\r\n\r\n###  页\r\n&ensp;页，是InnoDB 存储引擎磁盘管理的最小单元，每个页的大小默认为 16KB。为了保证页的连续性，InnoDB 存储引擎每次从磁盘申请 4-5 个区。\r\n\r\n###  行\r\n&ensp;行，InnoDB 存储引擎数据是按行进行存放的。在行中，默认有两个隐藏字段： \r\n+ Trx_id：每次对某条记录进行改动时，都会把对应的事务id赋值给trx_id隐藏列。\r\n+ Roll_pointer：每次对某条引记录进行改动时，都会把旧的版本写入到undo日志中，这个隐藏列就相当于一个指针，可以通过它来找到该记录修改前的信息。",contentRendered:'<h2 id="关于innodb的逻辑存储结构" tabindex="-1"><a class="header-anchor" href="#关于innodb的逻辑存储结构" aria-hidden="true">#</a> 关于InnoDB的逻辑存储结构</h2>\n<p><img src="https://ooszy.cco.vin/img/blog-public/ljz.gif" alt="InnoDB的逻辑存储结构" originSrc="https://wx1.sinaimg.cn/mw690/ae168f56gy1h19bfdlf1lj20q10dk0tn.jpg" data="aurora"></p>\n<h3 id="表空间" tabindex="-1"><a class="header-anchor" href="#表空间" aria-hidden="true">#</a> 表空间</h3>\n<p>  表空间是InnoDB存储引擎逻辑结构的最高层，如果用户启用了参数 innodb_file_per_table(在8.0版本中默认开启)，则每张表都会有一个表空间（xxx.ibd），一个mysql实例可以对应多个表空间，用于存储记录、索引等数据。</p>\n<h3 id="段" tabindex="-1"><a class="header-anchor" href="#段" aria-hidden="true">#</a> 段</h3>\n<p>  段，分为数据段（Leaf node segment）、索引段（Non-leaf node segment）、回滚段（Rollback segment），InnoDB是索引组织表，数据段就是B+树的叶子节点， 索引段即为B+树的非叶子节点。段用来管理多个Extent（区）。</p>\n<h3 id="区" tabindex="-1"><a class="header-anchor" href="#区" aria-hidden="true">#</a> 区</h3>\n<p>  区，表空间的单元结构，每个区的大小为1M。 默认情况下， InnoDB存储引擎页大小为16K， 即一个区中一共有64个连续的页。</p>\n<h3 id="页" tabindex="-1"><a class="header-anchor" href="#页" aria-hidden="true">#</a> 页</h3>\n<p> 页，是InnoDB 存储引擎磁盘管理的最小单元，每个页的大小默认为 16KB。为了保证页的连续性，InnoDB 存储引擎每次从磁盘申请 4-5 个区。</p>\n<h3 id="行" tabindex="-1"><a class="header-anchor" href="#行" aria-hidden="true">#</a> 行</h3>\n<p> 行，InnoDB 存储引擎数据是按行进行存放的。在行中，默认有两个隐藏字段：</p>\n<ul>\n<li>Trx_id：每次对某条记录进行改动时，都会把对应的事务id赋值给trx_id隐藏列。</li>\n<li>Roll_pointer：每次对某条引记录进行改动时，都会把旧的版本写入到undo日志中，这个隐藏列就相当于一个指针，可以通过它来找到该记录修改前的信息。</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/MySQL/逻辑存储结构.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"逻辑存储结构",filePath:"D:/blog/blog-demo/docs/MySQL/逻辑存储结构.md",filePathRelative:"MySQL/逻辑存储结构.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/MySQL/逻辑存储结构.html.vue",componentFilePathRelative:"pages/MySQL/逻辑存储结构.html.vue",componentFileChunkName:"v-1cb8f391",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/MySQL/逻辑存储结构.html.js",dataFilePathRelative:"pages/MySQL/逻辑存储结构.html.js",dataFileChunkName:"v-1cb8f391",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/MySQL/逻辑存储结构.html",htmlFilePathRelative:"MySQL/逻辑存储结构.html"},{data:{key:"v-3706649a",path:"/404.html",title:"",lang:"zh-CN",frontmatter:{layout:"404"},excerpt:"",headers:[],git:{}},key:"v-3706649a",path:"/404.html",title:"",lang:"zh-CN",frontmatter:{layout:"404"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/404.html.vue",componentFilePathRelative:"pages/404.html.vue",componentFileChunkName:"v-3706649a",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/404.html.js",dataFilePathRelative:"pages/404.html.js",dataFileChunkName:"v-3706649a",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/404.html",htmlFilePathRelative:"404.html"},{data:{key:"v-8daa1a0e",path:"/",title:"",lang:"zh-CN",frontmatter:{layout:"Layout",home:!0},excerpt:"",headers:[],git:{}},key:"v-8daa1a0e",path:"/",title:"",lang:"zh-CN",frontmatter:{layout:"Layout",home:!0},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/index.html.vue",componentFilePathRelative:"pages/index.html.vue",componentFileChunkName:"v-8daa1a0e",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/index.html.js",dataFilePathRelative:"pages/index.html.js",dataFileChunkName:"v-8daa1a0e",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/index.html",htmlFilePathRelative:"index.html"},{data:{key:"v-74bc627b",path:"/about/",title:"",lang:"zh-CN",frontmatter:{layout:"About",slug:"aurora-about"},excerpt:"",headers:[],git:{}},key:"v-74bc627b",path:"/about/",title:"",lang:"zh-CN",frontmatter:{layout:"About",slug:"aurora-about"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/about/index.html.vue",componentFilePathRelative:"pages/about/index.html.vue",componentFileChunkName:"v-74bc627b",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/about/index.html.js",dataFilePathRelative:"pages/about/index.html.js",dataFileChunkName:"v-74bc627b",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/about/index.html",htmlFilePathRelative:"about/index.html"},{data:{key:"v-14f724bf",path:"/mood/",title:"",lang:"zh-CN",frontmatter:{layout:"Mood",slug:"aurora-mood"},excerpt:"",headers:[],git:{}},key:"v-14f724bf",path:"/mood/",title:"",lang:"zh-CN",frontmatter:{layout:"Mood",slug:"aurora-mood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/mood/index.html.vue",componentFilePathRelative:"pages/mood/index.html.vue",componentFileChunkName:"v-14f724bf",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/mood/index.html.js",dataFilePathRelative:"pages/mood/index.html.js",dataFileChunkName:"v-14f724bf",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/mood/index.html",htmlFilePathRelative:"mood/index.html"},{data:{key:"v-14e6501c",path:"/link/",title:"",lang:"zh-CN",frontmatter:{layout:"Link",slug:"aurora-link"},excerpt:"",headers:[],git:{}},key:"v-14e6501c",path:"/link/",title:"",lang:"zh-CN",frontmatter:{layout:"Link",slug:"aurora-link"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/link/index.html.vue",componentFilePathRelative:"pages/link/index.html.vue",componentFileChunkName:"v-14e6501c",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/link/index.html.js",dataFilePathRelative:"pages/link/index.html.js",dataFileChunkName:"v-14e6501c",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/link/index.html",htmlFilePathRelative:"link/index.html"},{data:{key:"v-744d024e",path:"/tag/",title:"",lang:"zh-CN",frontmatter:{layout:"Tag",slug:"aurora-tag"},excerpt:"",headers:[],git:{}},key:"v-744d024e",path:"/tag/",title:"",lang:"zh-CN",frontmatter:{layout:"Tag",slug:"aurora-tag"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/tag/index.html.vue",componentFilePathRelative:"pages/tag/index.html.vue",componentFileChunkName:"v-744d024e",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/tag/index.html.js",dataFilePathRelative:"pages/tag/index.html.js",dataFileChunkName:"v-744d024e",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/tag/index.html",htmlFilePathRelative:"tag/index.html"},{data:{key:"v-705c21a6",path:"/archive/",title:"",lang:"zh-CN",frontmatter:{layout:"Archive",slug:"aurora-archive"},excerpt:"",headers:[],git:{}},key:"v-705c21a6",path:"/archive/",title:"",lang:"zh-CN",frontmatter:{layout:"Archive",slug:"aurora-archive"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/archive/index.html.vue",componentFilePathRelative:"pages/archive/index.html.vue",componentFileChunkName:"v-705c21a6",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/archive/index.html.js",dataFilePathRelative:"pages/archive/index.html.js",dataFileChunkName:"v-705c21a6",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/archive/index.html",htmlFilePathRelative:"archive/index.html"},{data:{key:"v-6629f178",path:"/aurora-coze/",title:"",lang:"zh-CN",frontmatter:{layout:"CozeMood",slug:"aurora-coze-mood"},excerpt:"",headers:[],git:{}},key:"v-6629f178",path:"/aurora-coze/",title:"",lang:"zh-CN",frontmatter:{layout:"CozeMood",slug:"aurora-coze-mood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-coze/index.html.vue",componentFilePathRelative:"pages/aurora-coze/index.html.vue",componentFileChunkName:"v-6629f178",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-coze/index.html.js",dataFilePathRelative:"pages/aurora-coze/index.html.js",dataFileChunkName:"v-6629f178",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/aurora-coze/index.html",htmlFilePathRelative:"aurora-coze/index.html"},{data:{key:"v-031dfb13",path:"/register/",title:"",lang:"zh-CN",frontmatter:{layout:"RegisterUser",slug:"aurora-coze-register"},excerpt:"",headers:[],git:{}},key:"v-031dfb13",path:"/register/",title:"",lang:"zh-CN",frontmatter:{layout:"RegisterUser",slug:"aurora-coze-register"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/register/index.html.vue",componentFilePathRelative:"pages/register/index.html.vue",componentFileChunkName:"v-031dfb13",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/register/index.html.js",dataFilePathRelative:"pages/register/index.html.js",dataFileChunkName:"v-031dfb13",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/register/index.html",htmlFilePathRelative:"register/index.html"},{data:{key:"v-e2acc714",path:"/photo/",title:"",lang:"zh-CN",frontmatter:{layout:"CozePhoto",slug:"aurora-photo"},excerpt:"",headers:[],git:{}},key:"v-e2acc714",path:"/photo/",title:"",lang:"zh-CN",frontmatter:{layout:"CozePhoto",slug:"aurora-photo"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/photo/index.html.vue",componentFilePathRelative:"pages/photo/index.html.vue",componentFileChunkName:"v-e2acc714",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/photo/index.html.js",dataFilePathRelative:"pages/photo/index.html.js",dataFileChunkName:"v-e2acc714",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/photo/index.html",htmlFilePathRelative:"photo/index.html"},{data:{key:"v-4382d077",path:"/next-mood/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraCozeMood",slug:"aurora-AuroraCozeMood"},excerpt:"",headers:[],git:{}},key:"v-4382d077",path:"/next-mood/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraCozeMood",slug:"aurora-AuroraCozeMood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/next-mood/index.html.vue",componentFilePathRelative:"pages/next-mood/index.html.vue",componentFileChunkName:"v-4382d077",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/next-mood/index.html.js",dataFilePathRelative:"pages/next-mood/index.html.js",dataFileChunkName:"v-4382d077",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/next-mood/index.html",htmlFilePathRelative:"next-mood/index.html"},{data:{key:"v-3279cf61",path:"/aurora-archive/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraArchive",slug:"aurora-plugin-archive"},excerpt:"",headers:[],git:{}},key:"v-3279cf61",path:"/aurora-archive/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraArchive",slug:"aurora-plugin-archive"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-archive/index.html.vue",componentFilePathRelative:"pages/aurora-archive/index.html.vue",componentFileChunkName:"v-3279cf61",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-archive/index.html.js",dataFilePathRelative:"pages/aurora-archive/index.html.js",dataFileChunkName:"v-3279cf61",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/aurora-archive/index.html",htmlFilePathRelative:"aurora-archive/index.html"},{data:{key:"v-3c506944",path:"/aurora-music/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraMusic",slug:"aurora-plugin-music"},excerpt:"",headers:[],git:{}},key:"v-3c506944",path:"/aurora-music/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraMusic",slug:"aurora-plugin-music"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-music/index.html.vue",componentFilePathRelative:"pages/aurora-music/index.html.vue",componentFileChunkName:"v-3c506944",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-music/index.html.js",dataFilePathRelative:"pages/aurora-music/index.html.js",dataFileChunkName:"v-3c506944",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/aurora-music/index.html",htmlFilePathRelative:"aurora-music/index.html"}]},7039:(e,a,t)=>{t.d(a,{Z:()=>l});const l=[{data:{key:"v-53329e14",path:"/JavaSE/BigDecimal()%E6%96%B9%E6%B3%95%E6%B3%A8%E6%84%8F%E7%82%B9.html",title:"BigDecimal()方法注意点",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,description:"关于BigDecimal()方法注意点",title:"BigDecimal()方法注意点",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"关于BigDecimal()方法",slug:"关于bigdecimal-方法",children:[]}],git:{}},key:"v-53329e14",path:"/JavaSE/BigDecimal()%E6%96%B9%E6%B3%95%E6%B3%A8%E6%84%8F%E7%82%B9.html",title:"BigDecimal()方法注意点",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,description:"关于BigDecimal()方法注意点",title:"BigDecimal()方法注意点",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"关于BigDecimal()方法",slug:"关于bigdecimal-方法",children:[]}],content:'## 关于BigDecimal()方法 \r\n\r\n#### 注意：禁止使用构造方法 BigDecimal(double)的方式把 double 值转化为 BigDecimal 对象！ \r\n\r\n说明：BigDecimal(double)存在精度损失风险，在精确计算或值比较的场景中可能会导致业务逻辑异常。\r\n>如：BigDecimal g = new BigDecimal(0.1F); 实际的存储值为：0.10000000149 \r\n\r\n正例：优先推荐入参为 String 的构造方法，或使用 BigDecimal 的 valueOf 方法，此方法内部其实执行了 Double 的 toString，而 Double 的 toString 按 double 的实际能表达的精度对尾数进行了截断。\r\n```\r\n BigDecimal recommend1 = new BigDecimal("0.1"); \r\n BigDecimal recommend2 = BigDecimal.valueOf(0.1);\r\n```\r\n',contentRendered:'<h2 id="关于bigdecimal-方法" tabindex="-1"><a class="header-anchor" href="#关于bigdecimal-方法" aria-hidden="true">#</a> 关于BigDecimal()方法</h2>\n<h4 id="注意-禁止使用构造方法-bigdecimal-double-的方式把-double-值转化为-bigdecimal-对象" tabindex="-1"><a class="header-anchor" href="#注意-禁止使用构造方法-bigdecimal-double-的方式把-double-值转化为-bigdecimal-对象" aria-hidden="true">#</a> 注意：禁止使用构造方法 BigDecimal(double)的方式把 double 值转化为 BigDecimal 对象！</h4>\n<p>说明：BigDecimal(double)存在精度损失风险，在精确计算或值比较的场景中可能会导致业务逻辑异常。</p>\n<blockquote>\n<p>如：BigDecimal g = new BigDecimal(0.1F); 实际的存储值为：0.10000000149</p>\n</blockquote>\n<p>正例：优先推荐入参为 String 的构造方法，或使用 BigDecimal 的 valueOf 方法，此方法内部其实执行了 Double 的 toString，而 Double 的 toString 按 double 的实际能表达的精度对尾数进行了截断。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> BigDecimal recommend1 = new BigDecimal("0.1"); \n BigDecimal recommend2 = BigDecimal.valueOf(0.1);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/JavaSE/BigDecimal()方法注意点.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"BigDecimal()方法注意点",filePath:"D:/blog/blog-demo/docs/JavaSE/BigDecimal()方法注意点.md",filePathRelative:"JavaSE/BigDecimal()方法注意点.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/BigDecimal()方法注意点.html.vue",componentFilePathRelative:"pages/JavaSE/BigDecimal()方法注意点.html.vue",componentFileChunkName:"v-53329e14",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/BigDecimal()方法注意点.html.js",dataFilePathRelative:"pages/JavaSE/BigDecimal()方法注意点.html.js",dataFileChunkName:"v-53329e14",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/JavaSE/BigDecimal()方法注意点.html",htmlFilePathRelative:"JavaSE/BigDecimal()方法注意点.html"},{data:{key:"v-53084daf",path:"/JavaSE/Java%20Reflection.html",title:"Java Reflection",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,description:"Java的反射",title:"Java Reflection",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"Java的反射「Reflection」",slug:"java的反射「reflection」",children:[{level:3,title:"概念",slug:"概念",children:[]},{level:3,title:"功能",slug:"功能",children:[]},{level:3,title:"优缺点",slug:"优缺点",children:[]},{level:3,title:"代码例子：",slug:"代码例子",children:[]}]}],git:{}},key:"v-53084daf",path:"/JavaSE/Java%20Reflection.html",title:"Java Reflection",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,description:"Java的反射",title:"Java Reflection",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"Java的反射「Reflection」",slug:"java的反射「reflection」",children:[{level:3,title:"概念",slug:"概念",children:[]},{level:3,title:"功能",slug:"功能",children:[]},{level:3,title:"优缺点",slug:"优缺点",children:[]},{level:3,title:"代码例子：",slug:"代码例子",children:[]}]}],content:'## Java的反射「Reflection」 \r\n \r\n### 概念 \r\n&ensp; 反射「Reflection」是Java被视为动态语言的关键，反射机制允许程序在执行期间借助Reflection API取得任何类的内部信息，并能直接操作任意对象内部属性及方法，如 \r\n>Class c = Class.forName("java.lang.String")  \r\n>Class c = 类名.class&ensp; (常用)\r\n\r\n&ensp; 加载完类以后，在堆内存的方法区中就产生了一个Class类型的对象（一个类只有一个Class对象），这个对象就包含了完整的类的结构信息。我们可以通过这个对象看到类的结构。这个对象就像是一面镜子，透过这个镜子可以看到类的结构，所以称之为反射。 \r\n+ 正常方式； 引入需要的包类名称 -> 通过new实例化 -> 取得实例化对象 \r\n+ 反射方式：实例化对象 -> getClass()方法 -> 得到完整的包类名称 \r\n \r\n### 功能\r\n+ 在运行时判断任意一个对象所属的类\r\n+ 在运行时构造任意一个类的对象\r\n+ 在运行时判断任意一个类所具有的成员变量和方法\r\n+ 在运行时获取泛型信息\r\n+ 在运行时调用任意一个对象的成员变量和方法\r\n+ 在运行时处理注解\r\n+ 生成动态代理（AOP） \r\n \r\n### 优缺点 \r\n+ 优点:\r\n + 可以实现动态创建对象和编译，体现出很大的灵活性 \r\n+ 缺点:\r\n + 对性能有影响，使用反射基本上是一种解释操作，这类操作总是安于直接执行相同的操作，速度上的差距大概是几十倍 \r\n\r\n### 代码例子： \r\n```\r\npublic static void main(String[] args) throws ClassNotFoundException {\r\n    // 通过反射获取类的class对象\r\n    Class c1 = Class.forName("reflection.User");\r\n    Class c2 = Class.forName("reflection.User");\r\n    System.out.println(c1);\r\n    System.out.println(c1.hashCode());\r\n    System.out.println(c2.hashCode());\r\n    // 一个类在内存中只有一个Class对象\r\n    // 一个类被加载后，类的整个结构都会被封装在Class对象中\r\n    System.out.println(c1 == c2);   //输出true\r\n}\r\n```\r\n',contentRendered:'<h2 id="java的反射「reflection」" tabindex="-1"><a class="header-anchor" href="#java的反射「reflection」" aria-hidden="true">#</a> Java的反射「Reflection」</h2>\n<h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3>\n<p>  反射「Reflection」是Java被视为动态语言的关键，反射机制允许程序在执行期间借助Reflection API取得任何类的内部信息，并能直接操作任意对象内部属性及方法，如</p>\n<blockquote>\n<p>Class c = Class.forName(&quot;java.lang.String&quot;)<br>\nClass c = 类名.class  (常用)</p>\n</blockquote>\n<p>  加载完类以后，在堆内存的方法区中就产生了一个Class类型的对象（一个类只有一个Class对象），这个对象就包含了完整的类的结构信息。我们可以通过这个对象看到类的结构。这个对象就像是一面镜子，透过这个镜子可以看到类的结构，所以称之为反射。</p>\n<ul>\n<li>正常方式； 引入需要的包类名称 -&gt; 通过new实例化 -&gt; 取得实例化对象</li>\n<li>反射方式：实例化对象 -&gt; getClass()方法 -&gt; 得到完整的包类名称</li>\n</ul>\n<h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h3>\n<ul>\n<li>在运行时判断任意一个对象所属的类</li>\n<li>在运行时构造任意一个类的对象</li>\n<li>在运行时判断任意一个类所具有的成员变量和方法</li>\n<li>在运行时获取泛型信息</li>\n<li>在运行时调用任意一个对象的成员变量和方法</li>\n<li>在运行时处理注解</li>\n<li>生成动态代理（AOP）</li>\n</ul>\n<h3 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点" aria-hidden="true">#</a> 优缺点</h3>\n<ul>\n<li>优点:</li>\n<li>可以实现动态创建对象和编译，体现出很大的灵活性</li>\n<li>缺点:</li>\n<li>对性能有影响，使用反射基本上是一种解释操作，这类操作总是安于直接执行相同的操作，速度上的差距大概是几十倍</li>\n</ul>\n<h3 id="代码例子" tabindex="-1"><a class="header-anchor" href="#代码例子" aria-hidden="true">#</a> 代码例子：</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>public static void main(String[] args) throws ClassNotFoundException {\n    // 通过反射获取类的class对象\n    Class c1 = Class.forName("reflection.User");\n    Class c2 = Class.forName("reflection.User");\n    System.out.println(c1);\n    System.out.println(c1.hashCode());\n    System.out.println(c2.hashCode());\n    // 一个类在内存中只有一个Class对象\n    // 一个类被加载后，类的整个结构都会被封装在Class对象中\n    System.out.println(c1 == c2);   //输出true\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/JavaSE/Java Reflection.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Java Reflection",filePath:"D:/blog/blog-demo/docs/JavaSE/Java Reflection.md",filePathRelative:"JavaSE/Java Reflection.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/Java Reflection.html.vue",componentFilePathRelative:"pages/JavaSE/Java Reflection.html.vue",componentFileChunkName:"v-53084daf",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/Java Reflection.html.js",dataFilePathRelative:"pages/JavaSE/Java Reflection.html.js",dataFileChunkName:"v-53084daf",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/JavaSE/Java Reflection.html",htmlFilePathRelative:"JavaSE/Java Reflection.html"},{data:{key:"v-7b8006fc",path:"/JavaSE/Protected%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90.html",title:"Protected访问权限",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,keyword:"访问权限",description:"Protected访问权限",title:"Protected访问权限",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"关于Protected的访问权限",slug:"关于protected的访问权限",children:[]}],git:{}},key:"v-7b8006fc",path:"/JavaSE/Protected%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90.html",title:"Protected访问权限",lang:"zh-CN",frontmatter:{date:"2022/2/10 20:08",sticky:!1,keyword:"访问权限",description:"Protected访问权限",title:"Protected访问权限",tag:["JavaSE"]},excerpt:"",headers:[{level:2,title:"关于Protected的访问权限",slug:"关于protected的访问权限",children:[]}],content:"## 关于Protected的访问权限\r\n\r\n1. 子类可以通过继承获得不同包父类的protected权限成员变量和成员方法，在子类中可以直接访问\r\n\r\n2. 在子类中可以通过子类的对象访问父类的protected成员变量和方法\r\n\r\n3. 在子类中反而不能通过父类的对象访问父类的protected成员变量和方法\r\n\r\n4. 在子类中不能通过其他子类的对象访问父类的protected成员变量和方法\r\n\r\n5. 在与子类同包的其他类中不能通过子类的对象访问父类的protected成员变量和方法\r\n————————————————\r\n\r\n[原文链接](https://blog.csdn.net/qq_32907195/article/details/108403463)",contentRendered:'<h2 id="关于protected的访问权限" tabindex="-1"><a class="header-anchor" href="#关于protected的访问权限" aria-hidden="true">#</a> 关于Protected的访问权限</h2>\n<ol>\n<li>\n<p>子类可以通过继承获得不同包父类的protected权限成员变量和成员方法，在子类中可以直接访问</p>\n</li>\n<li>\n<p>在子类中可以通过子类的对象访问父类的protected成员变量和方法</p>\n</li>\n<li>\n<p>在子类中反而不能通过父类的对象访问父类的protected成员变量和方法</p>\n</li>\n<li>\n<p>在子类中不能通过其他子类的对象访问父类的protected成员变量和方法</p>\n</li>\n<li>\n<p>在与子类同包的其他类中不能通过子类的对象访问父类的protected成员变量和方法\n————————————————</p>\n</li>\n</ol>\n<p><a href="https://blog.csdn.net/qq_32907195/article/details/108403463" target="_blank" rel="noopener noreferrer">原文链接<ExternalLinkIcon/></a></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/JavaSE/Protected访问权限.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Protected访问权限",filePath:"D:/blog/blog-demo/docs/JavaSE/Protected访问权限.md",filePathRelative:"JavaSE/Protected访问权限.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/Protected访问权限.html.vue",componentFilePathRelative:"pages/JavaSE/Protected访问权限.html.vue",componentFileChunkName:"v-7b8006fc",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/Protected访问权限.html.js",dataFilePathRelative:"pages/JavaSE/Protected访问权限.html.js",dataFileChunkName:"v-7b8006fc",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/JavaSE/Protected访问权限.html",htmlFilePathRelative:"JavaSE/Protected访问权限.html"},{data:{key:"v-27124a64",path:"/JavaSE/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",title:"单例模式",lang:"zh-CN",frontmatter:{date:"2022/2/8 20:08",sticky:!1,keyword:"单例模式",description:"常见的单例模式",title:"单例模式",tag:["单例模式","JavaSE"]},excerpt:"",headers:[{level:2,title:"单例模式",slug:"单例模式",children:[]},{level:2,title:"饿汉单例",slug:"饿汉单例",children:[]},{level:2,title:"懒汉单例",slug:"懒汉单例",children:[]}],git:{}},key:"v-27124a64",path:"/JavaSE/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",title:"单例模式",lang:"zh-CN",frontmatter:{date:"2022/2/8 20:08",sticky:!1,keyword:"单例模式",description:"常见的单例模式",title:"单例模式",tag:["单例模式","JavaSE"]},excerpt:"",headers:[{level:2,title:"单例模式",slug:"单例模式",children:[]},{level:2,title:"饿汉单例",slug:"饿汉单例",children:[]},{level:2,title:"懒汉单例",slug:"懒汉单例",children:[]}],content:'## 单例模式\n单例模式可以保证系统中，应用该模式的这个类永远只有一个实例，即一个类永远只能创建一个对象。  \n例如任务管理器对象我们只需要一个就可以解决问题了，这样可以节省内存空间。\n* 单例的实现方式很多\n  *  饿汉单例模式。\n  *  懒汉单例模式。\n  *  ......\n\n## 饿汉单例\n设计模式：  \n在用类获取对象的时候，对象已经提前为你创建好了。\n\n设计步骤：  \n1. 定义一个类，把构造器私有。  \n2. 定义一个静态变量存储一个对象。\n```\n/** a、定义一个单例类 */\npublic class SingleInstance { \n    /** c.定义一个静态变量存储一个对象即可 :属于类，与类一起加载一次 */ \n    public static SingleInstance instance = new SingleInstance ();  \n    /** b.单例必须私有构造器*/ \n    private SingleInstance (){     \n            System.out.println("创建了一个对象");    \n    }\n}\n```\n## 懒汉单例  \n设计模式：  \n在真正需要该对象的时候，才去创建一个对象(延迟加载对象)。\n设计步骤：\n1. 定义一个类，把构造器私有。\n2. 定义一个静态变量存储一个对象。\n3. 提供一个返回单例对象的方法  \n```\n/** 定义一个单例类 */\nclass SingleInstance2{   \n     /** 定义一个静态变量存储一个对象即可 :属于类，与类一起加载一次 */   \n    public static SingleInstanc2e instance ; // null\n          \n        private SingleInstance2(){ /** 单例必须私有构造器*/ \n\n        }   \n            \n            public static SingleInstance2 getInstance(){\n                /** 必须提供一个方法返回一个单例对象  */\n                if(instance == null)\n                    instance = new SingleInstance2();   \n            return instance;\n    }\n}\n```\n\n\n\n\n\n\n',contentRendered:'<h2 id="单例模式" tabindex="-1"><a class="header-anchor" href="#单例模式" aria-hidden="true">#</a> 单例模式</h2>\n<p>单例模式可以保证系统中，应用该模式的这个类永远只有一个实例，即一个类永远只能创建一个对象。<br>\n例如任务管理器对象我们只需要一个就可以解决问题了，这样可以节省内存空间。</p>\n<ul>\n<li>单例的实现方式很多\n<ul>\n<li>饿汉单例模式。</li>\n<li>懒汉单例模式。</li>\n<li>......</li>\n</ul>\n</li>\n</ul>\n<h2 id="饿汉单例" tabindex="-1"><a class="header-anchor" href="#饿汉单例" aria-hidden="true">#</a> 饿汉单例</h2>\n<p>设计模式：<br>\n在用类获取对象的时候，对象已经提前为你创建好了。</p>\n<p>设计步骤：</p>\n<ol>\n<li>定义一个类，把构造器私有。</li>\n<li>定义一个静态变量存储一个对象。</li>\n</ol>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/** a、定义一个单例类 */\npublic class SingleInstance { \n    /** c.定义一个静态变量存储一个对象即可 :属于类，与类一起加载一次 */ \n    public static SingleInstance instance = new SingleInstance ();  \n    /** b.单例必须私有构造器*/ \n    private SingleInstance (){     \n            System.out.println("创建了一个对象");    \n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="懒汉单例" tabindex="-1"><a class="header-anchor" href="#懒汉单例" aria-hidden="true">#</a> 懒汉单例</h2>\n<p>设计模式：<br>\n在真正需要该对象的时候，才去创建一个对象(延迟加载对象)。\n设计步骤：</p>\n<ol>\n<li>定义一个类，把构造器私有。</li>\n<li>定义一个静态变量存储一个对象。</li>\n<li>提供一个返回单例对象的方法</li>\n</ol>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/** 定义一个单例类 */\nclass SingleInstance2{   \n     /** 定义一个静态变量存储一个对象即可 :属于类，与类一起加载一次 */   \n    public static SingleInstanc2e instance ; // null\n          \n        private SingleInstance2(){ /** 单例必须私有构造器*/ \n\n        }   \n            \n            public static SingleInstance2 getInstance(){\n                /** 必须提供一个方法返回一个单例对象  */\n                if(instance == null)\n                    instance = new SingleInstance2();   \n            return instance;\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/JavaSE/单例模式.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"单例模式",filePath:"D:/blog/blog-demo/docs/JavaSE/单例模式.md",filePathRelative:"JavaSE/单例模式.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/单例模式.html.vue",componentFilePathRelative:"pages/JavaSE/单例模式.html.vue",componentFileChunkName:"v-27124a64",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/JavaSE/单例模式.html.js",dataFilePathRelative:"pages/JavaSE/单例模式.html.js",dataFileChunkName:"v-27124a64",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/JavaSE/单例模式.html",htmlFilePathRelative:"JavaSE/单例模式.html"},{data:{key:"v-d7c5ecf2",path:"/MySQL/InnoDB%E6%9E%B6%E6%9E%84.html",title:"关于InnoDB的架构",lang:"zh-CN",frontmatter:{date:"2022/4/14 8:27",sticky:!1,description:"关于InnoDB的架构",title:"关于InnoDB的架构",tag:["MySQL","InnoDB"]},excerpt:"",headers:[{level:3,title:"关于InnoDB的架构",slug:"关于innodb的架构",children:[]},{level:2,title:"",slug:"",children:[]}],git:{}},key:"v-d7c5ecf2",path:"/MySQL/InnoDB%E6%9E%B6%E6%9E%84.html",title:"关于InnoDB的架构",lang:"zh-CN",frontmatter:{date:"2022/4/14 8:27",sticky:!1,description:"关于InnoDB的架构",title:"关于InnoDB的架构",tag:["MySQL","InnoDB"]},excerpt:"",headers:[{level:3,title:"关于InnoDB的架构",slug:"关于innodb的架构",children:[]},{level:2,title:"",slug:"",children:[]}],content:"### 关于InnoDB的架构  \r\n## ",contentRendered:'<h3 id="关于innodb的架构" tabindex="-1"><a class="header-anchor" href="#关于innodb的架构" aria-hidden="true">#</a> 关于InnoDB的架构</h3>\n<h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> </h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/MySQL/InnoDB架构.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"InnoDB架构",filePath:"D:/blog/blog-demo/docs/MySQL/InnoDB架构.md",filePathRelative:"MySQL/InnoDB架构.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/MySQL/InnoDB架构.html.vue",componentFilePathRelative:"pages/MySQL/InnoDB架构.html.vue",componentFileChunkName:"v-d7c5ecf2",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/MySQL/InnoDB架构.html.js",dataFilePathRelative:"pages/MySQL/InnoDB架构.html.js",dataFileChunkName:"v-d7c5ecf2",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/MySQL/InnoDB架构.html",htmlFilePathRelative:"MySQL/InnoDB架构.html"},{data:{key:"v-1cb8f391",path:"/MySQL/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.html",title:"关于InnoDB的逻辑存储结构",lang:"zh-CN",frontmatter:{date:"2022/4/13 17:21",sticky:!1,description:"关于InnoDB的逻辑存储结构",title:"关于InnoDB的逻辑存储结构",tag:["MySQL"]},excerpt:"",headers:[{level:2,title:"关于InnoDB的逻辑存储结构",slug:"关于innodb的逻辑存储结构",children:[{level:3,title:"表空间",slug:"表空间",children:[]},{level:3,title:"段",slug:"段",children:[]},{level:3,title:"区",slug:"区",children:[]},{level:3,title:"页",slug:"页",children:[]},{level:3,title:"行",slug:"行",children:[]}]}],git:{}},key:"v-1cb8f391",path:"/MySQL/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.html",title:"关于InnoDB的逻辑存储结构",lang:"zh-CN",frontmatter:{date:"2022/4/13 17:21",sticky:!1,description:"关于InnoDB的逻辑存储结构",title:"关于InnoDB的逻辑存储结构",tag:["MySQL"]},excerpt:"",headers:[{level:2,title:"关于InnoDB的逻辑存储结构",slug:"关于innodb的逻辑存储结构",children:[{level:3,title:"表空间",slug:"表空间",children:[]},{level:3,title:"段",slug:"段",children:[]},{level:3,title:"区",slug:"区",children:[]},{level:3,title:"页",slug:"页",children:[]},{level:3,title:"行",slug:"行",children:[]}]}],content:"## 关于InnoDB的逻辑存储结构 \r\n\r\n![InnoDB的逻辑存储结构](https://wx1.sinaimg.cn/mw690/ae168f56gy1h19bfdlf1lj20q10dk0tn.jpg)\r\n\r\n### 表空间\r\n&ensp; 表空间是InnoDB存储引擎逻辑结构的最高层，如果用户启用了参数 innodb_file_per_table(在8.0版本中默认开启)，则每张表都会有一个表空间（xxx.ibd），一个mysql实例可以对应多个表空间，用于存储记录、索引等数据。 \r\n\r\n### 段\r\n&ensp; 段，分为数据段（Leaf node segment）、索引段（Non-leaf node segment）、回滚段（Rollback segment），InnoDB是索引组织表，数据段就是B+树的叶子节点， 索引段即为B+树的非叶子节点。段用来管理多个Extent（区）。 \r\n\r\n###  区\r\n&ensp; 区，表空间的单元结构，每个区的大小为1M。 默认情况下， InnoDB存储引擎页大小为16K， 即一个区中一共有64个连续的页。\r\n\r\n###  页\r\n&ensp;页，是InnoDB 存储引擎磁盘管理的最小单元，每个页的大小默认为 16KB。为了保证页的连续性，InnoDB 存储引擎每次从磁盘申请 4-5 个区。\r\n\r\n###  行\r\n&ensp;行，InnoDB 存储引擎数据是按行进行存放的。在行中，默认有两个隐藏字段： \r\n+ Trx_id：每次对某条记录进行改动时，都会把对应的事务id赋值给trx_id隐藏列。\r\n+ Roll_pointer：每次对某条引记录进行改动时，都会把旧的版本写入到undo日志中，这个隐藏列就相当于一个指针，可以通过它来找到该记录修改前的信息。",contentRendered:'<h2 id="关于innodb的逻辑存储结构" tabindex="-1"><a class="header-anchor" href="#关于innodb的逻辑存储结构" aria-hidden="true">#</a> 关于InnoDB的逻辑存储结构</h2>\n<p><img src="https://ooszy.cco.vin/img/blog-public/ljz.gif" alt="InnoDB的逻辑存储结构" originSrc="https://wx1.sinaimg.cn/mw690/ae168f56gy1h19bfdlf1lj20q10dk0tn.jpg" data="aurora"></p>\n<h3 id="表空间" tabindex="-1"><a class="header-anchor" href="#表空间" aria-hidden="true">#</a> 表空间</h3>\n<p>  表空间是InnoDB存储引擎逻辑结构的最高层，如果用户启用了参数 innodb_file_per_table(在8.0版本中默认开启)，则每张表都会有一个表空间（xxx.ibd），一个mysql实例可以对应多个表空间，用于存储记录、索引等数据。</p>\n<h3 id="段" tabindex="-1"><a class="header-anchor" href="#段" aria-hidden="true">#</a> 段</h3>\n<p>  段，分为数据段（Leaf node segment）、索引段（Non-leaf node segment）、回滚段（Rollback segment），InnoDB是索引组织表，数据段就是B+树的叶子节点， 索引段即为B+树的非叶子节点。段用来管理多个Extent（区）。</p>\n<h3 id="区" tabindex="-1"><a class="header-anchor" href="#区" aria-hidden="true">#</a> 区</h3>\n<p>  区，表空间的单元结构，每个区的大小为1M。 默认情况下， InnoDB存储引擎页大小为16K， 即一个区中一共有64个连续的页。</p>\n<h3 id="页" tabindex="-1"><a class="header-anchor" href="#页" aria-hidden="true">#</a> 页</h3>\n<p> 页，是InnoDB 存储引擎磁盘管理的最小单元，每个页的大小默认为 16KB。为了保证页的连续性，InnoDB 存储引擎每次从磁盘申请 4-5 个区。</p>\n<h3 id="行" tabindex="-1"><a class="header-anchor" href="#行" aria-hidden="true">#</a> 行</h3>\n<p> 行，InnoDB 存储引擎数据是按行进行存放的。在行中，默认有两个隐藏字段：</p>\n<ul>\n<li>Trx_id：每次对某条记录进行改动时，都会把对应的事务id赋值给trx_id隐藏列。</li>\n<li>Roll_pointer：每次对某条引记录进行改动时，都会把旧的版本写入到undo日志中，这个隐藏列就相当于一个指针，可以通过它来找到该记录修改前的信息。</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/MySQL/逻辑存储结构.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"逻辑存储结构",filePath:"D:/blog/blog-demo/docs/MySQL/逻辑存储结构.md",filePathRelative:"MySQL/逻辑存储结构.md",componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/MySQL/逻辑存储结构.html.vue",componentFilePathRelative:"pages/MySQL/逻辑存储结构.html.vue",componentFileChunkName:"v-1cb8f391",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/MySQL/逻辑存储结构.html.js",dataFilePathRelative:"pages/MySQL/逻辑存储结构.html.js",dataFileChunkName:"v-1cb8f391",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/MySQL/逻辑存储结构.html",htmlFilePathRelative:"MySQL/逻辑存储结构.html"},{data:{key:"v-3706649a",path:"/404.html",title:"",lang:"zh-CN",frontmatter:{layout:"404"},excerpt:"",headers:[],git:{}},key:"v-3706649a",path:"/404.html",title:"",lang:"zh-CN",frontmatter:{layout:"404"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/404.html.vue",componentFilePathRelative:"pages/404.html.vue",componentFileChunkName:"v-3706649a",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/404.html.js",dataFilePathRelative:"pages/404.html.js",dataFileChunkName:"v-3706649a",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/404.html",htmlFilePathRelative:"404.html"},{data:{key:"v-8daa1a0e",path:"/",title:"",lang:"zh-CN",frontmatter:{layout:"Layout",home:!0},excerpt:"",headers:[],git:{}},key:"v-8daa1a0e",path:"/",title:"",lang:"zh-CN",frontmatter:{layout:"Layout",home:!0},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/index.html.vue",componentFilePathRelative:"pages/index.html.vue",componentFileChunkName:"v-8daa1a0e",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/index.html.js",dataFilePathRelative:"pages/index.html.js",dataFileChunkName:"v-8daa1a0e",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/index.html",htmlFilePathRelative:"index.html"},{data:{key:"v-74bc627b",path:"/about/",title:"",lang:"zh-CN",frontmatter:{layout:"About",slug:"aurora-about"},excerpt:"",headers:[],git:{}},key:"v-74bc627b",path:"/about/",title:"",lang:"zh-CN",frontmatter:{layout:"About",slug:"aurora-about"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/about/index.html.vue",componentFilePathRelative:"pages/about/index.html.vue",componentFileChunkName:"v-74bc627b",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/about/index.html.js",dataFilePathRelative:"pages/about/index.html.js",dataFileChunkName:"v-74bc627b",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/about/index.html",htmlFilePathRelative:"about/index.html"},{data:{key:"v-14f724bf",path:"/mood/",title:"",lang:"zh-CN",frontmatter:{layout:"Mood",slug:"aurora-mood"},excerpt:"",headers:[],git:{}},key:"v-14f724bf",path:"/mood/",title:"",lang:"zh-CN",frontmatter:{layout:"Mood",slug:"aurora-mood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/mood/index.html.vue",componentFilePathRelative:"pages/mood/index.html.vue",componentFileChunkName:"v-14f724bf",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/mood/index.html.js",dataFilePathRelative:"pages/mood/index.html.js",dataFileChunkName:"v-14f724bf",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/mood/index.html",htmlFilePathRelative:"mood/index.html"},{data:{key:"v-14e6501c",path:"/link/",title:"",lang:"zh-CN",frontmatter:{layout:"Link",slug:"aurora-link"},excerpt:"",headers:[],git:{}},key:"v-14e6501c",path:"/link/",title:"",lang:"zh-CN",frontmatter:{layout:"Link",slug:"aurora-link"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/link/index.html.vue",componentFilePathRelative:"pages/link/index.html.vue",componentFileChunkName:"v-14e6501c",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/link/index.html.js",dataFilePathRelative:"pages/link/index.html.js",dataFileChunkName:"v-14e6501c",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/link/index.html",htmlFilePathRelative:"link/index.html"},{data:{key:"v-744d024e",path:"/tag/",title:"",lang:"zh-CN",frontmatter:{layout:"Tag",slug:"aurora-tag"},excerpt:"",headers:[],git:{}},key:"v-744d024e",path:"/tag/",title:"",lang:"zh-CN",frontmatter:{layout:"Tag",slug:"aurora-tag"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/tag/index.html.vue",componentFilePathRelative:"pages/tag/index.html.vue",componentFileChunkName:"v-744d024e",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/tag/index.html.js",dataFilePathRelative:"pages/tag/index.html.js",dataFileChunkName:"v-744d024e",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/tag/index.html",htmlFilePathRelative:"tag/index.html"},{data:{key:"v-705c21a6",path:"/archive/",title:"",lang:"zh-CN",frontmatter:{layout:"Archive",slug:"aurora-archive"},excerpt:"",headers:[],git:{}},key:"v-705c21a6",path:"/archive/",title:"",lang:"zh-CN",frontmatter:{layout:"Archive",slug:"aurora-archive"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/archive/index.html.vue",componentFilePathRelative:"pages/archive/index.html.vue",componentFileChunkName:"v-705c21a6",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/archive/index.html.js",dataFilePathRelative:"pages/archive/index.html.js",dataFileChunkName:"v-705c21a6",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/archive/index.html",htmlFilePathRelative:"archive/index.html"},{data:{key:"v-6629f178",path:"/aurora-coze/",title:"",lang:"zh-CN",frontmatter:{layout:"CozeMood",slug:"aurora-coze-mood"},excerpt:"",headers:[],git:{}},key:"v-6629f178",path:"/aurora-coze/",title:"",lang:"zh-CN",frontmatter:{layout:"CozeMood",slug:"aurora-coze-mood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-coze/index.html.vue",componentFilePathRelative:"pages/aurora-coze/index.html.vue",componentFileChunkName:"v-6629f178",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-coze/index.html.js",dataFilePathRelative:"pages/aurora-coze/index.html.js",dataFileChunkName:"v-6629f178",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/aurora-coze/index.html",htmlFilePathRelative:"aurora-coze/index.html"},{data:{key:"v-031dfb13",path:"/register/",title:"",lang:"zh-CN",frontmatter:{layout:"RegisterUser",slug:"aurora-coze-register"},excerpt:"",headers:[],git:{}},key:"v-031dfb13",path:"/register/",title:"",lang:"zh-CN",frontmatter:{layout:"RegisterUser",slug:"aurora-coze-register"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/register/index.html.vue",componentFilePathRelative:"pages/register/index.html.vue",componentFileChunkName:"v-031dfb13",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/register/index.html.js",dataFilePathRelative:"pages/register/index.html.js",dataFileChunkName:"v-031dfb13",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/register/index.html",htmlFilePathRelative:"register/index.html"},{data:{key:"v-e2acc714",path:"/photo/",title:"",lang:"zh-CN",frontmatter:{layout:"CozePhoto",slug:"aurora-photo"},excerpt:"",headers:[],git:{}},key:"v-e2acc714",path:"/photo/",title:"",lang:"zh-CN",frontmatter:{layout:"CozePhoto",slug:"aurora-photo"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/photo/index.html.vue",componentFilePathRelative:"pages/photo/index.html.vue",componentFileChunkName:"v-e2acc714",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/photo/index.html.js",dataFilePathRelative:"pages/photo/index.html.js",dataFileChunkName:"v-e2acc714",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/photo/index.html",htmlFilePathRelative:"photo/index.html"},{data:{key:"v-4382d077",path:"/next-mood/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraCozeMood",slug:"aurora-AuroraCozeMood"},excerpt:"",headers:[],git:{}},key:"v-4382d077",path:"/next-mood/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraCozeMood",slug:"aurora-AuroraCozeMood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/next-mood/index.html.vue",componentFilePathRelative:"pages/next-mood/index.html.vue",componentFileChunkName:"v-4382d077",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/next-mood/index.html.js",dataFilePathRelative:"pages/next-mood/index.html.js",dataFileChunkName:"v-4382d077",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/next-mood/index.html",htmlFilePathRelative:"next-mood/index.html"},{data:{key:"v-3279cf61",path:"/aurora-archive/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraArchive",slug:"aurora-plugin-archive"},excerpt:"",headers:[],git:{}},key:"v-3279cf61",path:"/aurora-archive/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraArchive",slug:"aurora-plugin-archive"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-archive/index.html.vue",componentFilePathRelative:"pages/aurora-archive/index.html.vue",componentFileChunkName:"v-3279cf61",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-archive/index.html.js",dataFilePathRelative:"pages/aurora-archive/index.html.js",dataFileChunkName:"v-3279cf61",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/aurora-archive/index.html",htmlFilePathRelative:"aurora-archive/index.html"},{data:{key:"v-3c506944",path:"/aurora-music/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraMusic",slug:"aurora-plugin-music"},excerpt:"",headers:[],git:{}},key:"v-3c506944",path:"/aurora-music/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraMusic",slug:"aurora-plugin-music"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-music/index.html.vue",componentFilePathRelative:"pages/aurora-music/index.html.vue",componentFileChunkName:"v-3c506944",dataFilePath:"D:/blog/blog-demo/docs/.vuepress/.temp/pages/aurora-music/index.html.js",dataFilePathRelative:"pages/aurora-music/index.html.js",dataFileChunkName:"v-3c506944",htmlFilePath:"D:/blog/blog-demo/docs/.vuepress/dist/aurora-music/index.html",htmlFilePathRelative:"aurora-music/index.html"}]}},e=>{e.O(0,[795,594],(()=>(5698,e(e.s=5698)))),e.O()}]);